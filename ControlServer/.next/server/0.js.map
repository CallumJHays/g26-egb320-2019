{"version":3,"file":"0.js","sources":["webpack:///./ts/components/Gamepad.tsx","webpack:///./ts/components/Menu.tsx"],"sourcesContent":["import ReactJoystick from \"react-joystick\";\nimport styled from \"styled-components\";\nimport { useState } from 'react';\n\nimport Menu from './Menu';\n\nconst App = styled.div`\n  font-family: Impact, Charcoal, sans-serif;\n`;\n\nconst Container = styled.div`\n  display: flex;\n  align-items: stretch;\n  height: 100vh;\n  > * {\n    flex-grow: 1;\n  }\n`;\n\nconst RightSide = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst JoystickContainer = styled.div`\n  display: flex;\n  position: relative;\n  align-items: center;\n  justify-content: center;\n\n  > span {\n    color: #757575;\n    position: absolute;\n    z-index: 1;\n\n    font-size: 2rem;\n    white-space: pre-line;\n    text-align: center;\n\n    user-select: none;\n    pointer-events: none;\n  }\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  align-items: stretch;\n  height: 50vh;\n  button {\n    cursor: pointer;\n    flex-grow: 1;\n    color: white;\n    \n\n    border: ${pressed => pressed ? '5px solid #EEEEEE' : '3px solid #424242' };\n  }\n`;\n\nconst KickButton = styled.button`\n  flex-grow: 1;\n  background-image: linear-gradient(to bottom left, #f44336, #b71c1c);\n  font-size: 10vh;\n\n  :hover {\n    background-image: linear-gradient(to bottom left, #b71c1c, #f44336);\n  }\n  :active {\n    border-color: #b71c1c;\n  }\n`;\n\nconst ConfigButtons = styled.div`\n  display: flex;\n  flex-direction: column;\n  font-size: 0.75em;\n`;\n\nconst ToggleDribbleButton = styled.button`\n  background-image: linear-gradient(to bottom left, #1e88e5, #0d47a1);\n  font-size: 3vh;\n\n  :hover {\n    background-image: linear-gradient(to bottom left, #0d47a1, #1e88e5);\n  }\n  :active {\n    border-color: #0d47a1;\n  }\n\n  ${({on}) => on ? '' : 'filter: grayscale(100%)'}\n`;\n\nconst MenuButton = styled.button`\n  background-image: linear-gradient(to bottom left, #4CAF50, #1B5E20);\n  font-size: 7vh;\n\n  :hover {\n    background-image: linear-gradient(to bottom left, #1B5E20, #4CAF50);\n  }\n  :active {\n    border-color: #388E3C;\n  }\n`;\n\nconst Joystick = ({ height: height = 'auto', bgText }) =>\n  <JoystickContainer>\n    <span>{bgText}</span>\n    <ReactJoystick\n      joyOptions={{\n        mode: \"semi\",\n        catchDistance: 100,\n        color: \"white\"\n      }}\n      containerStyle={{\n        display: \"flex\",\n        position: \"relative\",\n        margin: 0,\n        background: \"radial-gradient(#212121, #212121, #424242)\",\n        height,\n        width: '50vw',\n        justifyContent: 'center',\n        alignItems: 'center'\n      }}\n      managerListener={nipple => {\n        nipple.on(\"move\", (_e, _stick) => console.log(\"I moved!\"));\n        nipple.on(\"end\", () => console.log(\"I finished moving!\"));\n      }}\n    />\n  </JoystickContainer>\n\nexport default ({\n  _dribbleState: [isDribbling, setDribbling] = useState(false),\n  _menuState: [isMenuOpen, setMenuOpen] = useState(false)\n}) => (\n  <App>\n    {isMenuOpen ? <Menu onClose={() => setMenuOpen(false)} /> : null}\n    <Container>\n\n      <Joystick height='100vh' bgText={`↑\n      ← STRAFE →\n      ↓`}/>\n\n      <RightSide>\n        <Joystick height='50vh' bgText=\"↶ ROTATE ↷\" />\n\n        <ButtonContainer>\n          <ConfigButtons>\n            <ToggleDribbleButton\n              onClick={() => setDribbling(!isDribbling)}\n              className={isDribbling ? 'on' : null}\n              on={isDribbling}\n            >\n              TOGGLE<br/>DRIBBLE:<br/>{isDribbling ? \"ON\" : \"OFF\"}\n            </ToggleDribbleButton>\n            <MenuButton onClick={() => setMenuOpen(true)}>\n              MENU\n            </MenuButton>\n          </ConfigButtons>\n          <KickButton>\n            <b>KICK</b>\n          </KickButton>\n        </ButtonContainer>\n      </RightSide>\n    </Container>\n  </App>\n);\n","import Rodal from 'rodal';\n\nimport 'rodal/lib/rodal.css';\nimport { useState } from 'react';\n\nconst Menu = ({\n    onClose,\n    aiParams: {\n        _aimYellowGoal: [aimYellowGoal, setAimYellowGoal] = useState(true)\n    } = {}\n}) =>\n    <Rodal visible={true} onClose={onClose} width={550} height={300}>\n        <h4>Menu</h4>\n        <button>Play Imperial March</button>\n        \n        <hr />\n        <h4>AI</h4>\n\n\n        Current goal: {aimYellowGoal ? 'Yellow': 'Blue'}{\" \"}\n        <button onClick={() => setAimYellowGoal(!aimYellowGoal)}>Switch</button>\n    </Rodal>\n\n\nexport default Menu;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAEA;;AAAA;AAIA;;;;;;;AAAA;AASA;;;AAAA;AAKA;;;;;;;;;;;;;;;;;;AAAA;AAoBA;;;;;;;;;;AAUA;;AAVA;AAcA;;;;;;;;;;;AAAA;AAaA;;;;AAAA;AAMA;;;;;;;;;;;AAWA;AAAA;AAAA;AAXA;AAcA;;;;;;;;;;AAAA;AACA;AAWA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAUA;AACA;AACA;AACA;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAsBA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;AC9JA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;;;;A","sourceRoot":""}